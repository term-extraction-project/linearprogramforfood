import streamlit as st
from scipy.optimize import linprog

# --- Данные об ингредиентах ---
food = {
    "Филе индейки":  {"Влага": 0.7395, "Углеводы": 0.0, "Белок": 0.2403, "Жир": 0.0141,"Кальций": 0.0000986 , "Фосфор": 0.0018146 },
    "Легкое КРС":    {"Влага": 0.8009, "Углеводы": 0.0, "Белок": 0.1488, "Жир": 0.0273,"Кальций": 0.0001102 , "Фосфор":  0.0020691},
    "Печень КРС":    {"Влага": 0.7258, "Углеводы": 0.0401, "Белок": 0.182, "Жир": 0.0294,"Кальций": 0.0000772 , "Фосфор":  0.0034962},
    "Сердце КРС":    {"Влага": 0.7685, "Углеводы": 0.0139, "Белок": 0.1654, "Жир": 0.038,"Кальций": 0.0000593 , "Фосфор": 0.0022605 },
    "Кабачки":       {"Влага": 0.93, "Углеводы": 0.052, "Белок": 0.006, "Жир": 0.003,"Кальций":0 , "Фосфор": 0},
    "Картофель":     {"Влага": 0.76, "Углеводы": 0.173, "Белок": 0.02, "Жир": 0.004,"Кальций":0 , "Фосфор": 0},
    "Морковь":       {"Влага": 0.88, "Углеводы": 0.084, "Белок": 0.013, "Жир": 0.001,"Кальций":0 , "Фосфор": 0},
    "Льняное масло":  {"Влага": 0, "Углеводы": 0.0, "Белок": 0, "Жир": 0.998,"Кальций":0 , "Фосфор": 0},
    "Рисовая крупа":  {"Влага": 0.14, "Углеводы": 0.718, "Белок": 0.07, "Жир": 0.01,"Кальций":0 , "Фосфор": 0},
    "Кукурузная крупа": {"Влага": 0.14, "Углеводы": 0.724, "Белок": 0.082, "Жир": 0.012,"Кальций":0 , "Фосфор": 0},
    "Гречневая крупа": {"Влага": 0.14, "Углеводы": 0.632, "Белок": 0.126, "Жир": 0.033,"Кальций":0 , "Фосфор": 0},
    "Белковый гидролизат": {"Влага": 0.0371, "Углеводы": 0.0, "Белок": 0.856, "Жир": 0.0451,"Кальций":0 , "Фосфор": 0},
    "Вода": {"Влага": 1.0, "Углеводы": 0, "Белок": 0, "Жир": 0,"Кальций":0 , "Фосфор": 0},
    "Соль": {"Влага": 0, "Углеводы": 0, "Белок": 0, "Жир": 0, "Кальций":0 , "Фосфор": 0}
}

st.title("Оптимизация состава рациона")

# --- Выбор ингредиентов ---
ingredient_names = st.multiselect("Выберите ингредиенты:", list(food.keys()), default=["Филе индейки", "Картофель", "Льняное масло", "Гречневая крупа", "Вода"])

# --- Указание диапазонов количества каждого ингредиента ---
st.subheader("Ограничения по количеству ингредиентов (в % от общего состава, 100 г):")
ingr_ranges = []
for ingr in ingredient_names:
    ingr_ranges.append(st.slider(f"{ingr}", 0, 100, (5, 30)))

# --- Ограничения по нутриентам ---
st.subheader("Ограничения по нутриентам:")
nutr_ranges = {}
for nutr in ["Белок", "Жир", "Влага", "Углеводы"]:
    nutr_ranges[nutr] = st.slider(f"{nutr}", 0, 100, (0, 100))

# --- Построение задачи линейного программирования ---
A = [
    [food[ing][nutr] if val > 0 else -food[ing][nutr]
     for ing in ingredient_names]
    for nutr in nutr_ranges
    for val in (-nutr_ranges[nutr][0]/100, nutr_ranges[nutr][1]/100)
]
b = [
    val / 100 for nutr in nutr_ranges
    for val in (-nutr_ranges[nutr][0], nutr_ranges[nutr][1])
]

A_eq = [[1 for _ in ingredient_names]]
b_eq = [1.0]

bounds = [(low/100, high/100) for (low, high) in ingr_ranges]
st.subheader("Что максимизировать?")
selected_maximize = st.multiselect(
    "Выберите нутриенты для максимизации:",
    ["Влага", "Белок", "Жир", "Углеводы", "Кальций", "Фосфор"],
    default=["Влага", "Белок", "Жир", "Углеводы"]  # по умолчанию все
)

f = [-sum(food[i][nutr] for nutr in selected_maximize) for i in ingredient_names]

# --- Кнопка запуска оптимизации ---
if st.button("Рассчитать оптимальный состав"):
    res = linprog(f, A_ub=A, b_ub=b, A_eq=A_eq, b_eq=b_eq, bounds=bounds, method="highs")

    if res.success:
        st.success("Решение найдено!")
        result = {name: round(val * 100, 2) for name, val in zip(ingredient_names, res.x)}
        st.subheader("Состав (% от общего веса):")
        for name, value in result.items():
            st.write(f"{name}: {value} г")

        st.subheader("Питательная ценность (на 100 г):")
        nutrients = {
            nutr: round(sum(res.x[i] * food[name][nutr] for i, name in enumerate(ingredient_names)) * 100, 2)
            for nutr in ["Влага", "Белок", "Жир", "Углеводы", "Кальций", "Фосфор"]
        }
        for k, v in nutrients.items():
            st.write(f"{k}: {v}")
    else:
        st.error("Не удалось найти оптимальное решение. Попробуйте другие параметры.")
