import streamlit as st
from scipy.optimize import linprog
import numpy as np

# Данные
food = {
    "Филе индейки":  {"Влага": 73.95/100, "Углеводы": 0, "Белок": 24.03/100, "Жир": 1.41/100,"Кальций": 9.86/1000/100 , "Фосфор": 181.46/1000/100 },
    "Легкое КРС":    {"Влага": 80.09/100, "Углеводы": 0, "Белок": 14.88/100, "Жир": 2.73/100,"Кальций": 11.02/1000/100 , "Фосфор": 206.91/1000/100},
    "Печень КРС":    {"Влага": 72.58/100, "Углеводы": 4.01/100, "Белок": 18.20/100, "Жир": 2.94/100,"Кальций": 7.72/1000/100 , "Фосфор": 349.62/1000/100},
    "Сердце КРС":    {"Влага": 76.85/100, "Углеводы": 1.39/100, "Белок": 16.54/100, "Жир": 3.80/100,"Кальций": 5.93/1000/100 , "Фосфор": 226.05/1000/100 },
    "Кабачки":       {"Влага": 93/100, "Углеводы": 5.2/100, "Белок": 0.6/100, "Жир": 0.3/100,"Кальций":0 , "Фосфор": 0},
    "Картофель":     {"Влага": 76/100, "Углеводы": 17.3/100, "Белок": 2/100, "Жир": 0.4/100,"Кальций":0 , "Фосфор": 0},
    "Морковь":       {"Влага": 88/100, "Углеводы": 8.4/100, "Белок": 1.3/100, "Жир": 0.1/100,"Кальций":0 , "Фосфор": 0},
    "Льняное масло":  {"Влага": 0, "Углеводы": 0, "Белок": 0, "Жир": 99.8/100,"Кальций":0 , "Фосфор": 0},
    "Рисовая крупа":  {"Влага": 14/100, "Углеводы": 71.8/100, "Белок": 7/100, "Жир": 1/100,"Кальций":0 , "Фосфор": 0},
    "Кукурузная крупа": {"Влага": 14/100, "Углеводы": 72.4/100, "Белок": 8.2/100, "Жир": 1.2/100,"Кальций":0 , "Фосфор": 0},
    "Гречневая крупа": {"Влага": 14/100, "Углеводы": 63.2/100, "Белок": 12.6/100, "Жир": 3.3/100,"Кальций":0 , "Фосфор": 0},
    "Белковый гидролизат": {"Влага": 3.71/100, "Углеводы": 0, "Белок": 85.6/100, "Жир": 4.51/100,"Кальций":0 , "Фосфор": 0},
    "Вода": {"Влага": 1.0, "Углеводы": 0, "Белок": 0, "Жир": 0,"Кальций":0 , "Фосфор": 0},
    "Соль": {"Влага": 0, "Углеводы": 0, "Белок": 0, "Жир": 0, "Кальций":0 , "Фосфор": 0}
}

nutr_ranges = {
    "Белок": (10, 21),
    "Жир": (5, 15),
    "Влага": (70, 85)
}

st.title("Оптимизация состава ингредиентов")

# Выбор ингредиентов
ingredient_names = st.multiselect("Выберите ингредиенты:", list(food.keys()), default=["Филе индейки", "Картофель", "Льняное масло", "Гречневая крупа", "Вода"])

ingr_ranges = []
for ingr in ingredient_names:
    min_val, max_val = st.slider(f"{ingr} (граммы)", 0, 100, (10, 50))
    ingr_ranges.append((min_val, max_val))

if st.button("Рассчитать"):
    A, b = [], []

    A_eq = [[1 for _ in ingredient_names]]
    b_eq = [100]

    A = [[food[ing][nutr] if val > 0 else -food[ing][nutr]
          for ing in ingredient_names]
         for nutr in nutr_ranges
         for val in (-nutr_ranges[nutr][0], nutr_ranges[nutr][1])]
    b = [val for nutr in nutr_ranges for val in (-nutr_ranges[nutr][0], nutr_ranges[nutr][1])]

    bounds = ingr_ranges

    f = [-(food[i]["Влага"] + food[i]["Жир"] + food[i]["Белок"]) for i in ingredient_names]

    res = linprog(f, A_ub=A, b_ub=b, A_eq=A_eq, b_eq=b_eq, bounds=bounds, method="highs")

    if res.success:
        result = {name: round(val, 2) for name, val in zip(ingredient_names, res.x)}
        nutrients = {nutrient: round(sum(result[i] * food[i][nutrient] for i in ingredient_names), 3)
                     for nutrient in ["Влага", "Белок", "Жир", "Углеводы", "Кальций", "Фосфор"]}

        st.subheader("Результат (в граммах):")
        st.write(result)

        st.subheader("Питательные вещества (на 100 г):")
        st.write(nutrients)

        nutrients_30g = {nutrient: round(sum(result[i] * food[i][nutrient]*100/30 for i in ingredient_names), 3)
                         for nutrient in ["Белок", "Жир", "Углеводы", "Кальций", "Фосфор"]}

        st.subheader("Питательные вещества (на 30 г):")
        st.write(nutrients_30g)
    else:
        st.error("Оптимальное решение не найдено.")
